/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package View;

import Controler.Conectar;
import static Controler.TCC.pesquisa;
import static Controler.TCC.refresh;
import static View.GUICadUsuario.pegarfunc;
import static View.GUICadUsuario.txtfunccod;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author Aluno Tard
 */
public class GUIPesquisarFuncionario extends javax.swing.JFrame {

static String lugar="funcionario",palavra,coluna="func_nome",coluna2="func_cod";
static boolean alteracaofuncionario;
   String url2 = "jdbc:mysql://localhost/loja"; // enderço do BD
  String username = "root";        //nome de um usuário de seu BD
  String password = "";  // senha do BD
 static String pesqfunccod,pesqfunccpf, pesqfuncrg, pesqfuncctps, pesqfuncnome, pesqfuncdtnasc, pesqfuncend, pesqfuncbairro, pesqfunccompl,pesqfunccep, pesqfunctel, pesqfuncsal, pesqfunccomi, pesqfuncperi, pesqfuncemail;
    static int codigofuncionario;             
    public GUIPesquisarFuncionario() {
     Model.LookAndFeel.estilo();         initComponents();
              this.setDefaultCloseOperation(2);      this.setResizable(false);   this.setTitle("FaciModas 1.0"); 
            for (int indice=0; indice < tabela.getColumnCount(); indice++){
tabela.getColumnModel().getColumn(indice).setPreferredWidth(150);
    }
           if (pegarfunc == true){
            /*btalterar.setEnabled(false);
            btalterar.setVisible(false);*/
             btexcluir.setEnabled(false);
            btexcluir.setVisible(false);
           
            lbltitulo.setText("Selecionar Funcionário");
              Icon img = new ImageIcon(GUIPesquisarProduto.class.getClassLoader().getResource("Imagens/iconok.png")); 
        btpesq.setIcon(img);
        
         btalterar.setText("Novo");
                   Icon add = new ImageIcon(GUIPesquisarProduto.class.getClassLoader().getResource("Imagens/addnew.png")); 
        btalterar.setIcon(add);            
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        entityManager = java.beans.Beans.isDesignTime() ? null : javax.persistence.Persistence.createEntityManagerFactory("loja?zeroDateTimeBehavior=convertToNullPU").createEntityManager();
        funcionarioQuery = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT f FROM Funcionario f");
        funcionarioList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : funcionarioQuery.getResultList();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        lbltitulo = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabela = new javax.swing.JTable();
        btalterar = new javax.swing.JButton();
        btexcluir = new javax.swing.JButton();
        txtpesquisa = new javax.swing.JTextField();
        btpesq = new javax.swing.JButton();
        combopesquisa = new javax.swing.JComboBox();
        bttvoltarmenupesquisar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));
        jPanel1.setLayout(null);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/logobranco1.png"))); // NOI18N
        jLabel1.setText("jLabel1");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(-20, -10, 200, 111);

        lbltitulo.setFont(new java.awt.Font("Calibri", 1, 36)); // NOI18N
        lbltitulo.setForeground(new java.awt.Color(255, 255, 255));
        lbltitulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbltitulo.setText("Funcionários");
        jPanel1.add(lbltitulo);
        lbltitulo.setBounds(40, 40, 850, 40);

        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane2.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        tabela.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);

        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, funcionarioList, tabela);
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${funcionarioPK.funcCod}"));
        columnBinding.setColumnName("Código");
        columnBinding.setColumnClass(Integer.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${funcionarioPK.funcNome}"));
        columnBinding.setColumnName("Nome");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${funcCpf}"));
        columnBinding.setColumnName("CPF");
        columnBinding.setColumnClass(Long.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${funcRg}"));
        columnBinding.setColumnName("RG");
        columnBinding.setColumnClass(Long.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${funcCtps}"));
        columnBinding.setColumnName("CTPS");
        columnBinding.setColumnClass(Long.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${funcDtnasc}"));
        columnBinding.setColumnName("Data de nascimento");
        columnBinding.setColumnClass(java.util.Date.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${funcEnd}"));
        columnBinding.setColumnName("Endereço");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${funcBairro}"));
        columnBinding.setColumnName("Bairro");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${funcCompl}"));
        columnBinding.setColumnName("Complemento");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${funcTel}"));
        columnBinding.setColumnName("Telefone");
        columnBinding.setColumnClass(java.math.BigInteger.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${funcSal}"));
        columnBinding.setColumnName("Salário");
        columnBinding.setColumnClass(Float.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${funcComi}"));
        columnBinding.setColumnName("Comissão");
        columnBinding.setColumnClass(Float.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${funcPeri}"));
        columnBinding.setColumnName("Período");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${funcEmail}"));
        columnBinding.setColumnName("Email");
        columnBinding.setColumnClass(String.class);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        jScrollPane2.setViewportView(tabela);

        jPanel1.add(jScrollPane2);
        jScrollPane2.setBounds(40, 150, 850, 350);

        btalterar.setBackground(new java.awt.Color(0, 0, 0));
        btalterar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btalterar.setForeground(new java.awt.Color(255, 255, 255));
        btalterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/iconexcluir.png"))); // NOI18N
        btalterar.setText("Excluir");
        btalterar.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true));
        btalterar.setContentAreaFilled(false);
        btalterar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btalterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btalterarActionPerformed(evt);
            }
        });
        jPanel1.add(btalterar);
        btalterar.setBounds(390, 110, 70, 30);

        btexcluir.setBackground(new java.awt.Color(0, 0, 0));
        btexcluir.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btexcluir.setForeground(new java.awt.Color(255, 255, 255));
        btexcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/iconedit2.png"))); // NOI18N
        btexcluir.setText("Alterar");
        btexcluir.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true));
        btexcluir.setContentAreaFilled(false);
        btexcluir.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btexcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btexcluirActionPerformed(evt);
            }
        });
        jPanel1.add(btexcluir);
        btexcluir.setBounds(290, 110, 90, 30);

        txtpesquisa.setFont(new java.awt.Font("Calibri", 0, 11)); // NOI18N
        txtpesquisa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtpesquisaActionPerformed(evt);
            }
        });
        txtpesquisa.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtpesquisaKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtpesquisaKeyReleased(evt);
            }
        });
        jPanel1.add(txtpesquisa);
        txtpesquisa.setBounds(590, 110, 260, 30);

        btpesq.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/iconpesquisar3.png"))); // NOI18N
        btpesq.setContentAreaFilled(false);
        btpesq.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btpesq.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btpesqActionPerformed(evt);
            }
        });
        jPanel1.add(btpesq);
        btpesq.setBounds(850, 110, 40, 30);

        combopesquisa.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Código/Nome", "CPF", "RG", "Telefone" }));
        combopesquisa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combopesquisaActionPerformed(evt);
            }
        });
        jPanel1.add(combopesquisa);
        combopesquisa.setBounds(470, 110, 110, 30);

        bttvoltarmenupesquisar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/voltaresquerdanovo.jpg"))); // NOI18N
        bttvoltarmenupesquisar.setToolTipText("Voltar para o menu de pesquisas!");
        bttvoltarmenupesquisar.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true));
        bttvoltarmenupesquisar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bttvoltarmenupesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttvoltarmenupesquisarActionPerformed(evt);
            }
        });
        jPanel1.add(bttvoltarmenupesquisar);
        bttvoltarmenupesquisar.setBounds(40, 510, 40, 40);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(0, 0, 940, 590);

        bindingGroup.bind();

        setSize(new java.awt.Dimension(931, 600));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txtpesquisaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtpesquisaKeyPressed
    
        
        
    }//GEN-LAST:event_txtpesquisaKeyPressed

    private void txtpesquisaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtpesquisaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtpesquisaActionPerformed

    private void txtpesquisaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtpesquisaKeyReleased

        
        palavra = txtpesquisa.getText();
               

              if(palavra.equals("")){
                          refresh(tabela,lugar);
              }else{           
               
                      pesquisa(tabela,lugar,coluna,coluna2,palavra);
               }
        

        
    }//GEN-LAST:event_txtpesquisaKeyReleased

    private void btpesqActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btpesqActionPerformed
if (pegarfunc == true){
    
   
                               if (txtpesquisa.getText().equals("") || txtpesquisa.getText() ==null){
           
        
              codigofuncionario = (int) tabela.getValueAt(tabela.getSelectedRow(), 0);     
                      
            }else{
                   if(tabela.getRowCount() == 1){
                    codigofuncionario = (int) tabela.getValueAt(0,0);
                    
                }else{
                        codigofuncionario = Integer.valueOf(txtpesquisa.getText());
            }                 
               }
      
        try{    
            //Declarando a variavel código
           
   
                           
            Conectar.carregarDriver(); // Carregando o driver
            try {// Tratamento de erro para a conexao
                // Declarando  a variavel de conexão con
                // e estabelendo a conexão
                Connection con = null;

                try {
                    con = (Connection) DriverManager.getConnection(url2, username, password);
                } catch (SQLException ex) {
                    Logger.getLogger(GUIPesquisarFuncionario.class.getName()).log(Level.SEVERE, null, ex);
                }

                // Declarando uma string com o comando mySQL para consulta
             String sql="";
                   

                      

         sql = "SELECT func_cod,func_cpf,func_rg,func_ctps,func_nome,func_dtnasc,func_end,func_bairro,func_compl,func_cep,func_tel,func_sal,func_comi,func_peri,func_email FROM funcionario where func_cod = "+codigofuncionario+";";
  

                      Statement stm = (Statement) con.createStatement();
                try
                {
                   
                    ResultSet rs = stm.executeQuery(sql);

                    int i=0; 

                    while (rs.next()) {  
                                          
                        pesqfunccod = rs.getString("func_cod");
                        pesqfunccpf= rs.getString("func_cpf");
                        pesqfuncrg= rs.getString("func_rg");
                        pesqfuncctps= rs.getString("func_ctps");
                        pesqfuncnome= rs.getString("func_nome");
                        pesqfuncdtnasc= rs.getString("func_dtnasc");
                        pesqfuncend= rs.getString("func_end");
                        pesqfuncbairro= rs.getString("func_bairro");
                        pesqfunccompl= rs.getString("func_compl");
                        pesqfunctel= rs.getString("func_tel");
                        pesqfuncsal= rs.getString("func_sal");
                        pesqfunccomi = rs.getString("func_comi");
                        pesqfuncperi = rs.getString("func_peri");
                        pesqfuncemail = rs.getString("func_email");  
                        pesqfunccep = rs.getString("func_cep");
                        
                        i++;  
                                        }
                       if(i==0){ // Verificando se ha dados cadastrados atraves da variavel i

                        JOptionPane.showMessageDialog(null,"Código inválido!\n Digite um código válido!","Resultado",-1);

                    }else{
                           
                           if(pegarfunc == true){
                               txtfunccod.setText(pesqfunccod);
                           pegarfunc = false;
                                   this.dispose();
                           }else{
                       alteracaofuncionario = true;
                       new GUICadfuncionario().setVisible(true);
                       this.dispose();
                           }
                       }

                 

                } catch (Exception ex) { // Consulta mal sucedida
                    JOptionPane.showMessageDialog(null,"Erro ao consultar!","ERRO",0);
                }

            } catch (SQLException ex) {
                // Conexão com servidor mal sucedida
                JOptionPane.showMessageDialog(null,"Erro ao conectar com o servidor","ERRO!",0);
            }

        }catch(NumberFormatException erro){
            // Código fora do formato
            JOptionPane.showMessageDialog(null,"Digite o código corretamante","ERRO",0);
            txtpesquisa.setText("");
        }

}else{
        
           palavra = txtpesquisa.getText();
               

              if(palavra.equals("")){
                          refresh(tabela,lugar);
              }else{           
               
                      pesquisa(tabela,lugar,coluna,coluna2,palavra);
               }
        }
    }//GEN-LAST:event_btpesqActionPerformed

    private void btexcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btexcluirActionPerformed

                          if (txtpesquisa.getText().equals("") || txtpesquisa.getText() ==null){
           
        
              codigofuncionario = (int) tabela.getValueAt(tabela.getSelectedRow(), 0);     
                      
            }else{
                   if(tabela.getRowCount() == 1){
                    codigofuncionario = (int) tabela.getValueAt(0,0);
                    
                }else{
                        codigofuncionario = Integer.valueOf(txtpesquisa.getText());
            }                 
               }
      
        try{    
            //Declarando a variavel código
           
   
                           
            Conectar.carregarDriver(); // Carregando o driver
            try {// Tratamento de erro para a conexao
                // Declarando  a variavel de conexão con
                // e estabelendo a conexão
                Connection con = null;

                try {
                    con = (Connection) DriverManager.getConnection(url2, username, password);
                } catch (SQLException ex) {
                    Logger.getLogger(GUIPesquisarFuncionario.class.getName()).log(Level.SEVERE, null, ex);
                }

                // Declarando uma string com o comando mySQL para consulta
             String sql="";
                   

                      

         sql = "SELECT func_cod,func_cpf,func_rg,func_ctps,func_nome,func_dtnasc,func_end,func_bairro,func_compl,func_cep,func_tel,func_sal,func_comi,func_peri,func_email FROM funcionario where func_cod = "+codigofuncionario+";";
  

                      Statement stm = (Statement) con.createStatement();
                try
                {
                   
                    ResultSet rs = stm.executeQuery(sql);

                    int i=0; 

                    while (rs.next()) {  
                                                      
                        pesqfunccpf= rs.getString("func_cpf");
                        pesqfuncrg= rs.getString("func_rg");
                        pesqfuncctps= rs.getString("func_ctps");
                        pesqfuncnome= rs.getString("func_nome");
                        pesqfuncdtnasc= rs.getString("func_dtnasc");
                        pesqfuncend= rs.getString("func_end");
                        pesqfuncbairro= rs.getString("func_bairro");
                        pesqfunccompl= rs.getString("func_compl");
                        pesqfunctel= rs.getString("func_tel");
                        pesqfuncsal= rs.getString("func_sal");
                        pesqfunccomi = rs.getString("func_comi");
                        pesqfuncperi = rs.getString("func_peri");
                        pesqfuncemail = rs.getString("func_email");  
                        pesqfunccep = rs.getString("func_cep");
                        
                        i++;  
                                        }
                       if(i==0){ // Verificando se ha dados cadastrados atraves da variavel i

                        JOptionPane.showMessageDialog(null,"Código inválido!\n Digite um código válido!","Resultado",-1);

                    }else{
                       alteracaofuncionario = true;
                       new GUICadfuncionario().setVisible(true);
                       this.dispose();
                       
                       }

                 

                } catch (Exception ex) { // Consulta mal sucedida
                    JOptionPane.showMessageDialog(null,"Erro ao consultar!"+ex,"ERRO",0);
                }

            } catch (SQLException ex) {
                // Conexão com servidor mal sucedida
                JOptionPane.showMessageDialog(null,"Erro ao conectar com o servidor","ERRO!",0);
            }

        }catch(NumberFormatException erro){
            // Código fora do formato
            JOptionPane.showMessageDialog(null,"Digite o código corretamante","ERRO",0);
            txtpesquisa.setText("");
        }
    }//GEN-LAST:event_btexcluirActionPerformed

    private void btalterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btalterarActionPerformed
if (pegarfunc == true){
    new GUICadfuncionario().setVisible(true);
    this.dispose();    
}else{
            
                        if (txtpesquisa.getText().equals("") || txtpesquisa.getText() == null){
              
              codigofuncionario = (int) tabela.getValueAt(tabela.getSelectedRow(), 0);    
                      
            }else{
                   if(tabela.getRowCount() == 1){
                    codigofuncionario = (int) tabela.getValueAt(0,0);
                    
                }else{
                        codigofuncionario = Integer.valueOf(txtpesquisa.getText());
            }                 
               }
      
        try{    
            //Declarando a variavel código
           
   
                           
            Conectar.carregarDriver(); // Carregando o driver
            Connection con = null;
        try {
            con = (Connection) DriverManager.getConnection(url2, username, password);
        } catch (SQLException ex) {
            Logger.getLogger(GUIPesquisarContas.class.getName()).log(Level.SEVERE, null, ex);
        }

              
  
        String sql = "DELETE FROM "+lugar+" WHERE "+coluna2+" = "+codigofuncionario+";";
    
        
        try { // Tratamento de Erros para inserção
            
            // Criando varialvel que executara a inserção
            PreparedStatement excluir = (PreparedStatement) con.prepareStatement(sql);
            excluir.execute(); // Executando a inserção
            
            JOptionPane.showMessageDialog(null,"Exclusão realizada com sucesso!!!\n","",-1);
            
          refresh(tabela,lugar);
          
         } catch (Exception ex) { // Consulta mal sucedida
            JOptionPane.showMessageDialog(null,"Erro ao consultar!"+ex,"ERRO",0);
        }

        }catch(NumberFormatException erro){
            // Código fora do formato
            JOptionPane.showMessageDialog(null,"Digite o código corretamante","ERRO",0);
            txtpesquisa.setText("");
        }
}
    }//GEN-LAST:event_btalterarActionPerformed

    private void combopesquisaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combopesquisaActionPerformed
        if(combopesquisa.getSelectedItem().toString().equals("Código/Nome")){
            coluna = "func_nome";
            coluna2="func_cod";
        }
        if(combopesquisa.getSelectedItem().toString().equals("CPF")){
            coluna = "func_cpf";
            coluna2 = "func_cpf";
        }
        if(combopesquisa.getSelectedItem().toString().equals("RG")){
            coluna = "func_rg";
            coluna2 = "func_rg";
        }
        if(combopesquisa.getSelectedItem().toString().equals("Telefone")){
            coluna = "func_tel";
            coluna2 = "func_tel";
        }
    }//GEN-LAST:event_combopesquisaActionPerformed

    private void bttvoltarmenupesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttvoltarmenupesquisarActionPerformed
  this.dispose();        
new GUIPesquisar().setVisible(true);// TODO add your handling code here:
    }//GEN-LAST:event_bttvoltarmenupesquisarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUIPesquisarFuncionario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUIPesquisarFuncionario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUIPesquisarFuncionario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUIPesquisarFuncionario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUIPesquisarFuncionario().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btalterar;
    private javax.swing.JButton btexcluir;
    private javax.swing.JButton btpesq;
    private javax.swing.JButton bttvoltarmenupesquisar;
    private javax.swing.JComboBox combopesquisa;
    private javax.persistence.EntityManager entityManager;
    private java.util.List<View.Funcionario> funcionarioList;
    private javax.persistence.Query funcionarioQuery;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lbltitulo;
    private javax.swing.JTable tabela;
    private javax.swing.JTextField txtpesquisa;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}
