/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package View;

import Controler.Conectar;
import Controler.TCC;
import static View.GUILogin.userfunccodlogin;
import static View.GUIPesquisarProduto.pesqprodcodbarra;
import jACBrFramework.ACBrEventListener;
import jACBrFramework.serial.ecf.ACBrECF;
import jACBrFramework.serial.ecf.AbreCupomEventObject;
import jACBrFramework.serial.ecf.FormaPagamento;
import jACBrFramework.serial.ecf.VendeItemEventObject;
import java.awt.Toolkit;
import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.EventObject;
import java.util.logging.Level;
import java.util.logging.Logger;
import javasweda.CONVECF;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.DefaultFormatterFactory;
import javax.swing.text.NumberFormatter;

/**
 *
 * @author lab0519
 */
public class GUIVender extends javax.swing.JFrame {
    
    String url2 = "jdbc:mysql://localhost/loja"; // enderço do BD
  String username = "root";        //nome de um usuário de seu BD
  String password = "";  // senha do BD
  
 static int clicod, funccod,contprod,formpagnota;
 static float total;
 static String obs,forpaga,data, vendanomecli="", vendaendcli="";
 static String  desc="";
 static boolean pegarproduto, pegarcliente;
 static String     prodcodbarra="", prodnome="", prodtipo="",prodmarca="", vl="",prodtamanho=""; 
 static int codigoproduto,cont=0,prodqtd;
  static float   prodvlvenda,subtotal=0,vltotal=0;
  static double recebido=0;
  static long cpf;
  static String [][] descnota = new String [1000][4];
  static double desconto = 0.0;
    public GUIVender() {
     Model.LookAndFeel.estilo();         initComponents();

              this.setDefaultCloseOperation(2);      this.setResizable(false);   this.setTitle("FaciModas 1.0"); 
              
            DecimalFormat dFormat = new DecimalFormat("#,###,###.00") ;
        NumberFormatter formatter = new NumberFormatter(dFormat) ;
        formatter.setFormat(dFormat) ;
        formatter.setAllowsInvalid(false) ;      
        txtvlrecebido.setFormatterFactory ( new DefaultFormatterFactory ( formatter ) ) ;
       
       
        for (int l =0; l< cont; l++){
                            for (int c=0; c<7;c++){
                                tabela.setValueAt(null, l, c);
                            }
                        }
   clicod=0; funccod=Integer.valueOf(userfunccodlogin);contprod=0;formpagnota=0;
total=0;
 obs="";forpaga="";data=""; vendanomecli=""; vendaendcli="";
desc="";
pegarproduto=false;
pegarcliente=false;
 prodcodbarra=""; prodnome=""; prodtipo="";prodmarca=""; vl="";prodtamanho=""; 
 codigoproduto=0;cont=0;prodqtd=0;
  prodvlvenda=0;
  subtotal=0;
  vltotal=0;
 recebido=0;
  cpf =0;     
                                   
             
             txtvlrecebido.setText("0,00");
     
        txtcli.setText("");   
txtfunccod.setText(userfunccodlogin.toString());
txttamanho.setText("");
txtcpf.setText("");
txttroco.setText("");
txtsubtotal.setText("");
txttotal.setText("");
txtdesconto.setText("0.0");
txtvlrecebido.setText("0.0");
txtqtd.setValue(1);
comboform.setSelectedItem("Dinheiro");
txtobs.setText("");
  
  for (int l =0; l<100;l++){
    for (int c=0; c<4; c++){
        descnota[l][c] = "";
    }
}
        desconto = 0.0;
        
        
        if (pegarproduto==true){
            txtpesquisa2.setText(pesqprodcodbarra);
             
        }else{            
        pegarproduto=false;
        }
      //funccod = Integer.valueOf(userfunccodlogin);
      txtfunccod.setText(String.valueOf(funccod));
      
         Date hoje = new Date();             
        txtdata.setDate(hoje);
     txtdesconto.setText("0.0");           
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        lblcodvenda = new javax.swing.JLabel();
        bttpesquisarcodvenda1 = new javax.swing.JButton();
        lblquantvenda = new javax.swing.JLabel();
        txtqtd = new com.toedter.components.JSpinField();
        lbltamvenda = new javax.swing.JLabel();
        txttamanho = new javax.swing.JTextField();
        bttincluirprodutovenda = new javax.swing.JButton();
        bttincluirprodutovenda1 = new javax.swing.JButton();
        lbldtemissaovenda = new javax.swing.JLabel();
        txtdata = new com.toedter.calendar.JDateChooser();
        lblcodclivenda = new javax.swing.JLabel();
        bttpesquisarcodvenda = new javax.swing.JButton();
        lblvalorvenda = new javax.swing.JLabel();
        txtfunccod = new javax.swing.JFormattedTextField();
        lbldescvenda = new javax.swing.JLabel();
        lbltotalvenda = new javax.swing.JLabel();
        txtobs = new javax.swing.JTextField();
        lblcodfuncvenda = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        bttfinalizarvenda = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabela = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        lblcpf = new javax.swing.JLabel();
        checkboxnotafiscalvenda = new javax.swing.JCheckBox();
        comboform = new javax.swing.JComboBox();
        txtcpf = new javax.swing.JFormattedTextField();
        try

        {

            javax.swing.text.MaskFormatter cpf= new

            javax.swing.text.MaskFormatter("###.###.###-##");

            txtcpf = new javax.swing.JFormattedTextField(cpf);

        }

        catch (Exception e)

        {

            JOptionPane.showMessageDialog(null,"Ocorreu um erro");//mensagem se acontecer erro

        }
        lblvalorrecvenda1 = new javax.swing.JLabel();
        lblvalorrecvenda2 = new javax.swing.JLabel();
        lblvalorrecvenda3 = new javax.swing.JLabel();
        txtsubtotal = new javax.swing.JLabel();
        txttotal = new javax.swing.JLabel();
        txttroco = new javax.swing.JLabel();
        bttvoltarmenupesquisar = new javax.swing.JButton();
        txtvlrecebido = new javax.swing.JFormattedTextField();
        txtdesconto = new javax.swing.JFormattedTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));
        jPanel1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jPanel1KeyReleased(evt);
            }
        });
        jPanel1.setLayout(null);

        jPanel2.setBackground(new java.awt.Color(0, 0, 0));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Produto", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Comic Sans MS", 1, 14), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel2.setForeground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(null);

        lblcodvenda.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        lblcodvenda.setForeground(new java.awt.Color(255, 255, 255));
        lblcodvenda.setText("Código:");
        jPanel2.add(lblcodvenda);
        lblcodvenda.setBounds(30, 30, 60, 30);

        bttpesquisarcodvenda1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        bttpesquisarcodvenda1.setForeground(new java.awt.Color(255, 255, 255));
        bttpesquisarcodvenda1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/iconpesquisar3.png"))); // NOI18N
        bttpesquisarcodvenda1.setBorder(null);
        bttpesquisarcodvenda1.setContentAreaFilled(false);
        bttpesquisarcodvenda1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bttpesquisarcodvenda1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttpesquisarcodvenda1ActionPerformed(evt);
            }
        });
        jPanel2.add(bttpesquisarcodvenda1);
        bttpesquisarcodvenda1.setBounds(200, 30, 40, 30);

        lblquantvenda.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        lblquantvenda.setForeground(new java.awt.Color(255, 255, 255));
        lblquantvenda.setText("Quantidade: ");
        jPanel2.add(lblquantvenda);
        lblquantvenda.setBounds(250, 30, 80, 30);

        txtqtd.setFocusable(false);
        txtqtd.setMinimum(1);
        txtqtd.setRequestFocusEnabled(false);
        txtqtd.setValue(1);
        txtqtd.setVerifyInputWhenFocusTarget(false);
        jPanel2.add(txtqtd);
        txtqtd.setBounds(330, 30, 120, 30);

        lbltamvenda.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        lbltamvenda.setForeground(new java.awt.Color(255, 255, 255));
        lbltamvenda.setText("Tamanho:");
        jPanel2.add(lbltamvenda);
        lbltamvenda.setBounds(470, 30, 70, 30);

        txttamanho.setVerifyInputWhenFocusTarget(false);
        jPanel2.add(txttamanho);
        txttamanho.setBounds(530, 30, 90, 30);

        bttincluirprodutovenda.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        bttincluirprodutovenda.setForeground(new java.awt.Color(255, 255, 255));
        bttincluirprodutovenda.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/addnew.png"))); // NOI18N
        bttincluirprodutovenda.setText("Adicionar");
        bttincluirprodutovenda.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true));
        bttincluirprodutovenda.setContentAreaFilled(false);
        bttincluirprodutovenda.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bttincluirprodutovenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttincluirprodutovendaActionPerformed(evt);
            }
        });
        jPanel2.add(bttincluirprodutovenda);
        bttincluirprodutovenda.setBounds(630, 30, 90, 30);

        bttincluirprodutovenda1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        bttincluirprodutovenda1.setForeground(new java.awt.Color(255, 255, 255));
        bttincluirprodutovenda1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/iconexcluir.png"))); // NOI18N
        bttincluirprodutovenda1.setText("Remover");
        bttincluirprodutovenda1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true));
        bttincluirprodutovenda1.setContentAreaFilled(false);
        bttincluirprodutovenda1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bttincluirprodutovenda1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttincluirprodutovenda1ActionPerformed(evt);
            }
        });
        jPanel2.add(bttincluirprodutovenda1);
        bttincluirprodutovenda1.setBounds(730, 30, 90, 30);

        txtpesquisa2.setFocusCycleRoot(true);
        txtpesquisa2.setFocusTraversalPolicyProvider(true);
        txtpesquisa2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtpesquisa2ActionPerformed(evt);
            }
        });
        jPanel2.add(txtpesquisa2);
        txtpesquisa2.setBounds(90, 30, 110, 30);

        jPanel1.add(jPanel2);
        jPanel2.setBounds(60, 140, 830, 80);

        lbldtemissaovenda.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        lbldtemissaovenda.setForeground(new java.awt.Color(255, 255, 255));
        lbldtemissaovenda.setText("Data Emissão:");
        jPanel1.add(lbldtemissaovenda);
        lbldtemissaovenda.setBounds(70, 110, 90, 30);

        txtdata.setDoubleBuffered(false);
        txtdata.setFocusable(false);
        txtdata.setRequestFocusEnabled(false);
        txtdata.setVerifyInputWhenFocusTarget(false);
        jPanel1.add(txtdata);
        txtdata.setBounds(160, 110, 140, 30);

        lblcodclivenda.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        lblcodclivenda.setForeground(new java.awt.Color(255, 255, 255));
        lblcodclivenda.setText("Código do Cliente:");
        jPanel1.add(lblcodclivenda);
        lblcodclivenda.setBounds(320, 110, 110, 30);

        txtcli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtcliActionPerformed(evt);
            }
        });
        txtcli.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtcliKeyReleased(evt);
            }
        });
        jPanel1.add(txtcli);
        txtcli.setBounds(440, 110, 110, 30);

        bttpesquisarcodvenda.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/iconpesquisar3.png"))); // NOI18N
        bttpesquisarcodvenda.setContentAreaFilled(false);
        bttpesquisarcodvenda.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bttpesquisarcodvenda.setFocusable(false);
        bttpesquisarcodvenda.setRequestFocusEnabled(false);
        bttpesquisarcodvenda.setVerifyInputWhenFocusTarget(false);
        bttpesquisarcodvenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttpesquisarcodvendaActionPerformed(evt);
            }
        });
        jPanel1.add(bttpesquisarcodvenda);
        bttpesquisarcodvenda.setBounds(560, 110, 30, 30);

        lblvalorvenda.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        lblvalorvenda.setForeground(new java.awt.Color(255, 255, 255));
        lblvalorvenda.setText("Sub Total:");
        jPanel1.add(lblvalorvenda);
        lblvalorvenda.setBounds(690, 360, 60, 30);

        txtfunccod.setBackground(new java.awt.Color(0, 0, 0));
        txtfunccod.setForeground(new java.awt.Color(255, 255, 255));
        txtfunccod.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("¤#,##0.00"))));
        txtfunccod.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtfunccod.setAutoscrolls(false);
        txtfunccod.setFocusable(false);
        txtfunccod.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtfunccod.setOpaque(false);
        txtfunccod.setRequestFocusEnabled(false);
        jPanel1.add(txtfunccod);
        txtfunccod.setBounds(770, 110, 120, 30);

        lbldescvenda.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        lbldescvenda.setForeground(new java.awt.Color(255, 255, 255));
        lbldescvenda.setText("Desconto:");
        jPanel1.add(lbldescvenda);
        lbldescvenda.setBounds(690, 400, 60, 30);

        lbltotalvenda.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        lbltotalvenda.setForeground(new java.awt.Color(255, 255, 255));
        lbltotalvenda.setText("Total:");
        jPanel1.add(lbltotalvenda);
        lbltotalvenda.setBounds(690, 440, 60, 30);

        txtobs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtobsActionPerformed(evt);
            }
        });
        jPanel1.add(txtobs);
        txtobs.setBounds(510, 440, 150, 30);

        lblcodfuncvenda.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        lblcodfuncvenda.setForeground(new java.awt.Color(255, 255, 255));
        lblcodfuncvenda.setText("Código do Funcionário:");
        jPanel1.add(lblcodfuncvenda);
        lblcodfuncvenda.setBounds(630, 110, 150, 30);

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/logobranco1.png"))); // NOI18N
        jLabel3.setText("jLabel1");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(-10, 0, 200, 110);

        bttfinalizarvenda.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        bttfinalizarvenda.setForeground(new java.awt.Color(255, 255, 255));
        bttfinalizarvenda.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/1416279790_next.png"))); // NOI18N
        bttfinalizarvenda.setText("Finalizar Venda");
        bttfinalizarvenda.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true));
        bttfinalizarvenda.setContentAreaFilled(false);
        bttfinalizarvenda.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bttfinalizarvenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttfinalizarvendaActionPerformed(evt);
            }
        });
        jPanel1.add(bttfinalizarvenda);
        bttfinalizarvenda.setBounds(400, 500, 180, 40);

        jScrollPane2.setBackground(new java.awt.Color(0, 0, 0));
        jScrollPane2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Descrição", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Comic Sans MS", 1, 14), new java.awt.Color(255, 255, 255))); // NOI18N

        tabela.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Código Barras", "Nome", "Tipo", "Marca", "Tamanho", "Quantidade", "Preço"
            }
        ));
        jScrollPane2.setViewportView(tabela);

        jPanel1.add(jScrollPane2);
        jScrollPane2.setBounds(60, 220, 830, 130);

        jLabel2.setFont(new java.awt.Font("Calibri", 1, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Venda");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(40, 40, 850, 40);

        jPanel3.setBackground(new java.awt.Color(0, 0, 0));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Pagamento", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Comic Sans MS", 0, 11), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel3.setLayout(null);

        lblcpf.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        lblcpf.setForeground(new java.awt.Color(255, 255, 255));
        lblcpf.setText("CPF:");
        lblcpf.setEnabled(false);
        jPanel3.add(lblcpf);
        lblcpf.setBounds(20, 70, 40, 30);

        checkboxnotafiscalvenda.setBackground(new java.awt.Color(0, 0, 0));
        checkboxnotafiscalvenda.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        checkboxnotafiscalvenda.setForeground(new java.awt.Color(255, 255, 255));
        checkboxnotafiscalvenda.setText("Nota Fiscal Paulista");
        checkboxnotafiscalvenda.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                checkboxnotafiscalvendaMouseClicked(evt);
            }
        });
        checkboxnotafiscalvenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkboxnotafiscalvendaActionPerformed(evt);
            }
        });
        jPanel3.add(checkboxnotafiscalvenda);
        checkboxnotafiscalvenda.setBounds(160, 30, 150, 30);

        comboform.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Dinheiro", "Catão Crédito", "Cartão Débito", "Cheque" }));
        comboform.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboformActionPerformed(evt);
            }
        });
        jPanel3.add(comboform);
        comboform.setBounds(20, 30, 130, 30);
        jPanel3.add(txtcpf);
        txtcpf.setBounds(60, 70, 230, 30);

        jPanel1.add(jPanel3);
        jPanel3.setBounds(60, 350, 320, 120);

        lblvalorrecvenda1.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        lblvalorrecvenda1.setForeground(new java.awt.Color(255, 255, 255));
        lblvalorrecvenda1.setText("OBS:");
        jPanel1.add(lblvalorrecvenda1);
        lblvalorrecvenda1.setBounds(410, 440, 100, 30);

        lblvalorrecvenda2.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        lblvalorrecvenda2.setForeground(new java.awt.Color(255, 255, 255));
        lblvalorrecvenda2.setText("Troco:");
        jPanel1.add(lblvalorrecvenda2);
        lblvalorrecvenda2.setBounds(410, 400, 100, 30);

        lblvalorrecvenda3.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        lblvalorrecvenda3.setForeground(new java.awt.Color(255, 255, 255));
        lblvalorrecvenda3.setText("Valor Recebido");
        jPanel1.add(lblvalorrecvenda3);
        lblvalorrecvenda3.setBounds(410, 360, 100, 30);

        txtsubtotal.setForeground(new java.awt.Color(255, 255, 255));
        txtsubtotal.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txtsubtotal.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jPanel1.add(txtsubtotal);
        txtsubtotal.setBounds(760, 360, 130, 30);

        txttotal.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        txttotal.setForeground(new java.awt.Color(51, 204, 0));
        txttotal.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txttotal.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jPanel1.add(txttotal);
        txttotal.setBounds(760, 440, 130, 30);

        txttroco.setForeground(new java.awt.Color(204, 0, 0));
        txttroco.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txttroco.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jPanel1.add(txttroco);
        txttroco.setBounds(510, 400, 150, 30);

        bttvoltarmenupesquisar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/voltaresquerdanovo.jpg"))); // NOI18N
        bttvoltarmenupesquisar.setToolTipText("Voltar para o menu de pesquisas!");
        bttvoltarmenupesquisar.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true));
        bttvoltarmenupesquisar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bttvoltarmenupesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttvoltarmenupesquisarActionPerformed(evt);
            }
        });
        jPanel1.add(bttvoltarmenupesquisar);
        bttvoltarmenupesquisar.setBounds(60, 500, 40, 40);

        txtvlrecebido.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtvlrecebidoKeyReleased(evt);
            }
        });
        jPanel1.add(txtvlrecebido);
        txtvlrecebido.setBounds(510, 360, 150, 30);

        txtdesconto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtdescontoKeyPressed(evt);
            }
        });
        jPanel1.add(txtdesconto);
        txtdesconto.setBounds(760, 400, 130, 30);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(-10, 0, 940, 580);

        setSize(new java.awt.Dimension(931, 599));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void checkboxnotafiscalvendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkboxnotafiscalvendaActionPerformed
if(checkboxnotafiscalvenda.isSelected() == true){
        txtcpf.setEnabled(true);
lblcpf.setEnabled(true);

}else{
        txtcpf.setEnabled(false);
lblcpf.setEnabled(false);
}
    }//GEN-LAST:event_checkboxnotafiscalvendaActionPerformed

    private void checkboxnotafiscalvendaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkboxnotafiscalvendaMouseClicked

    }//GEN-LAST:event_checkboxnotafiscalvendaMouseClicked

    private void txtobsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtobsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtobsActionPerformed

    private void bttpesquisarcodvendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttpesquisarcodvendaActionPerformed
pegarcliente=true;
new GUIPesquisarClientes().setVisible(true);

    }//GEN-LAST:event_bttpesquisarcodvendaActionPerformed

    private void bttpesquisarcodvenda1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttpesquisarcodvenda1ActionPerformed
     
        pegarproduto=true;
        new GUIPesquisarProduto().setVisible(true);

    }//GEN-LAST:event_bttpesquisarcodvenda1ActionPerformed
public static void nota() throws Throwable{
		ACBrECF ecf = null;

		try {
			BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));

			int modelo = 3;

	
			String porta = "COM1";


			ecf = new ACBrECF();

		
			ecf.addOnAntesAbreCupom(new ACBrEventListener<AbreCupomEventObject>() {

				@Override
				public void notification(AbreCupomEventObject e)
				{
					System.out.println(">> Evento OnAntesAbreCupom <<");
				}
			} );
			
			ecf.addOnDepoisVendeItem(new ACBrEventListener<VendeItemEventObject>() {

				@Override
				public void notification(VendeItemEventObject e)
				{
					System.out.println(">> Evento OnDepoisVendeItem <<");
					System.out.println(e.getCodigo() + " " + e.getDescricao());
				}
			});

			ecf.addOnMsgPoucoPapel(new ACBrEventListener<EventObject>() {

				@Override
				public void notification(EventObject e)
				{
					System.out.println(">> Evento OnMsgPoucoPapel <<");
				}
			});
			

			
			ecf.setModelo(modelo);
		
			
			 ecf.acharPorta(modelo);

			
			ecf.ativar();

		
		

		
			//ecf.corrigeEstadoErro(true);
			//ecf.leituraX();

			/*System.out.println("\nCarrega Formas de Pagamento\n");
			ecf.carregaFormasPagamento();

			System.out.println("Formas de pagamento\n");

			for (int i = 0; i < ecf.getFormasPagamento().length; i++) 
			{
				FormaPagamento formaPagto = ecf.getFormasPagamento()[i];
				System.out.println(" - " + formaPagto.getIndice() + " " + formaPagto.getDescricao());
			}*/


			ecf.abreCupom();
                                           
			for (int l = 0; l < contprod; l++) {
				System.out.println("Vende item " + l + "\n");
                              
				ecf.vendeItem(descnota[l][0],descnota[l][1],"I" ,Double.valueOf(descnota[l][2]),Double.valueOf(descnota[l][3]),0, "UN", "%", "D", 0);
                              
			}

		System.out.println("Subtotaliza\n");
			ecf.subtotalizaCupom(0, "Mensagem subtotaliza");

			System.out.println("Efetua Pagamento\n");
			System.out.println(formpagnota);
			ecf.efetuaPagamento("0"+String.valueOf(formpagnota), recebido, "", false);
			//ecf.efetuaPagamento("01", 50, "MENSAGEM FORMA DE PAGTO", false);

			System.out.println("Fecha cupom\n");
               
			ecf.fechaCupom("Volte Sempre !");

	
			ecf.desativar();
			ecf = null;

			reader.readLine();
}catch (Throwable t) {
			System.out.println(t.getMessage());
		}
finally {
			if (ecf != null) {
				ecf.desativar();
			}
		}


		//System.in.read();
	}
    private void bttfinalizarvendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttfinalizarvendaActionPerformed

         if (txtdata.getDate() == null || tabela.getValueAt(0, 0) == null || txtvlrecebido.getText() == null ||  txtvlrecebido.getText().equals("")){
                     JOptionPane.showMessageDialog(null,"Preencha os campos: Data/Descrição/Valor Recebido","ERRO",0);
          
         }else if(checkboxnotafiscalvenda.isSelected()){
             if(txtcli.getText().equals("") || txtcli.getText() == null){
              JOptionPane.showMessageDialog(null,"Preencha o código do cliente!","ERRO",0);
          
             }else{
                 
             }
         }
         
         {
             String x = txtvlrecebido.getText();
             x= x.replace(".","");
             x = x.replace(",",".");
             recebido = Double.valueOf(x);
             
        data = new SimpleDateFormat("yyyy-MM-dd").format(txtdata.getDate()); 
        if(txtcli.getText() == null || txtcli.getText().equals("")){
clicod = 0;
        }else{
        clicod = Integer.parseInt(txtcli.getText());
        }       
        

forpaga = comboform.getSelectedItem().toString();
if (forpaga.equals("Dinheiro")){
formpagnota = 1;

}else{
if (forpaga.equals("Cartão Crédito")){
formpagnota = 3;

}else{
if (forpaga.equals("Cartão Débito")){
formpagnota = 2;

}else{
    if (forpaga.equals("Cheque")){
formpagnota = 4;

}}}}

if (txtobs.getText() == null){
obs = "nenhuma";
}else{
obs = txtobs.getText();
}

int k=0;
contprod=0;
for (int l=0; l < tabela.getRowCount(); l++){        
    for (int c=0; c< tabela.getColumnCount(); c++){
        if (tabela.getValueAt(l, 0)== null){
            c = tabela.getColumnCount();
            l = tabela.getRowCount();
        }else{
            if(c==0 || c==1 || c==5 || c==6){
           
            descnota[l][k] = tabela.getValueAt(l, c).toString();
               k++;
             if (k > 3){
             contprod++;
                k=0;
            }
            }
            
            if(c==6){
                   desc = desc + "R$ " +tabela.getValueAt(l, c).toString() + " ";
            }else{
            desc = desc + tabela.getValueAt(l, c).toString() + " ";
            }
            
            
            }
        }
    desc = desc + "\n";
    }

      
 Conectar.carregarDriver();
      
      try { 
               
                   
               
            Connection con = null;
            
            
    try {
    con = (Connection) DriverManager.getConnection(url2, username, password);
    } catch (SQLException ex) {

    Logger.getLogger(GUIVender.class.getName()).log(Level.SEVERE, null, ex);
          
                   }
  String sql;

           sql = "INSERT INTO pedido (pedi_cod,pedi_data,pedi_cli_cod,pedi_desc,pedi_obs,pedi_total,pedi_forpaga,pedi_codfunc) values(null,'"+data+"',"+clicod+",'"+desc+"','"+obs+"',"+total+",'"+forpaga+"',"+funccod+");";

            try { // Tratamento de Erros para inserção

                // Criando varialvel que executara a inserção
                PreparedStatement inserir = (PreparedStatement) con.prepareStatement(sql);
                inserir.execute(); // Executando a inserção
                
 
                
Object [] not = {"Finalizar","Imprimir nota","Abrir Gaveta"};
     int op=5;
     
do{
      op  =   JOptionPane.showOptionDialog(null,"Venda realizada com sucesso!\nSelecione uma opção:","FaciModas 1.0",1,1,null,not,"");
                switch(op){
                    case 0:
                        for (int l =0; l< cont; l++){
                            for (int c=0; c<7;c++){
                                tabela.setValueAt(null, l, c);
                            }
                        }
                         clicod=0; funccod=Integer.valueOf(userfunccodlogin);contprod=0;formpagnota=0;
total=0;
 obs="";forpaga="";data=""; vendanomecli=""; vendaendcli="";
desc="";
pegarproduto=false;
pegarcliente=false;
 prodcodbarra=""; prodnome=""; prodtipo="";prodmarca=""; vl="";prodtamanho=""; 
 codigoproduto=0;cont=0;prodqtd=0;
  prodvlvenda=0;
  subtotal=0;
  vltotal=0;
 recebido=0;
  cpf =0;     
                                   
             
             txtvlrecebido.setText("0,00");
        Date hoje = new Date();             
        txtdata.setDate(hoje);   
        txtcli.setText("");   
txtfunccod.setText(userfunccodlogin.toString());
txttamanho.setText("");
txtcpf.setText("");
txttroco.setText("");
txtsubtotal.setText("");
txttotal.setText("");
txtdesconto.setText("0.0");
txtvlrecebido.setText("0.0");
txtqtd.setValue(1);
comboform.setSelectedItem("Dinheiro");
txtobs.setText("");
                        break;
                    case 1:
                           if(checkboxnotafiscalvenda.isSelected()){
                               String tr = txtcpf.getText();
        tr = tr.replace(".", "");
        tr = tr.replace("-", "");
                                cpf = Long.valueOf(tr);
                                try{
                                notaPaulista();
                                }catch (Error e){
                  JOptionPane.showMessageDialog(null,"Não foi possível gerar a nota fiscal paulista\n"+e);
                  }
                            }else{
                        try{
                            
                         
                        nota();
                          
                        
                        }catch (Throwable e){
                        JOptionPane.showMessageDialog(null,"Não foi possível imprimir a nota fiscal\n"+e,"FaciModas 1.0",-1);
                        }
                          }
                          
                        break;
                        
                    case 3:
                  try{
                      abrirGaveta();
                  }catch (Error e){
                  JOptionPane.showMessageDialog(null,"Não foi possível abrir a gaveta"+e);
                  }
                        break;                        
                }
}while(op!=0);

               //imprimir nota fiscal
                                  
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null,"Erro na inserção!"+ex,"ERRO!",0);
            }

        }catch(NumberFormatException erro){
            // Tratamento de erro caso o usuario não digite o telefone corretamente
            JOptionPane.showMessageDialog(null,"Digite os dados corretamente","ERRO",0);
            
        }
      
}
    }//GEN-LAST:event_bttfinalizarvendaActionPerformed

     public void notaPaulista() {
        final CONVECF dll = CONVECF.INSTANCE;
        int ret;

        ret = dll.ECF_AbrePortaSerial();
        System.out.println("Abrindo Porta Serial: "+ret);

        if (ret==0)
            System.out.println("VERIFIQUE A IMPRESSORA FISCAL");
        else;
     
    
        String cpef = String.valueOf(cpf);
        ret = dll.ECF_AbreCupomMFD(cpef,vendanomecli,vendaendcli);
        System.out.println("Abre Cupom: "+ret);
        
        	for (int l = 0; l < contprod; l++) {
      
        ret = dll.ECF_VendeItem(descnota[l][0],descnota[l][1],"1800","I",descnota[l][2],2,descnota[l][3],"%",String.valueOf(desconto));
        System.out.println("Vende Item: "+ret);
                }
                
	
        ret = dll.ECF_FechaCupom(comboform.getSelectedItem().toString(), "A", "%", String.valueOf(total),String.valueOf(recebido), "Volte sempre !");
        System.out.println("Fecha Cupom: "+ret);


        ret = dll.ECF_DownloadMF("C:\\MFISCAL.MF");
        System.out.println("Download mf "+ret);

        ret = dll.ECF_DownloadMFD ("MFD.txt","0","000001","999999","0");
        System.out.println("Download MFD "+ret);

        ret = dll.ECF_ReproduzirMemoriaFiscalMFD("3", "01062009", "30062009", "C:\\cotepe.txt", "C:\\MFISCAL.MF");
        System.out.println("Cotepe "+ret);

        ret = dll.ECF_GeraRegistrosCAT52MFD("", "15072009");
        System.out.println("Geracao de Arquivos "+ret);

        ret = dll.ECF_FechaPortaSerial();
        System.out.println("Fechando Porta Serial "+ret);
    }
     
       public void abrirGaveta() {
        final CONVECF dll = CONVECF.INSTANCE;
        int ret;

        ret = dll.ECF_AbrePortaSerial();
        System.out.println("Abrindo Porta Serial: "+ret);

        if (ret==0)
            System.out.println("VERIFIQUE A IMPRESSORA FISCAL");
        else;

          dll.ECF_AcionaGaveta();
                
        ret = dll.ECF_FechaPortaSerial();
        System.out.println("Fechando Porta Serial "+ret);
    }
    private void bttincluirprodutovendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttincluirprodutovendaActionPerformed

     
        
        if(txtpesquisa2.getText() == null || txtpesquisa2.getText().equals("")){
        JOptionPane.showMessageDialog(null,"Preencha o campo do código!");
        }else{
           codigoproduto = Integer.valueOf(txtpesquisa2.getText());
      
  try{    
            //Declarando a variavel código
           
   
                           
            Conectar.carregarDriver(); // Carregando o driver
            try {// Tratamento de erro para a conexao
                // Declarando  a variavel de conexão con
                // e estabelendo a conexão
                Connection con = null;

                try {
                    con = (Connection) DriverManager.getConnection(url2, username, password);
                } catch (SQLException ex) {
                    Logger.getLogger(GUIPesquisarProduto.class.getName()).log(Level.SEVERE, null, ex);
                }

                // Declarando uma string com o comando mySQL para consulta
             String sql="";
                   

                      

         sql = "SELECT prod_cod,prod_codbarra,prod_nome,prod_tipo,prod_marca,prod_vlvenda,prod_vlforn,prod_tam,prod_cor,prod_cate,prod_quant,prod_taxatri,prod_margem FROM produto where prod_cod = "+codigoproduto+" OR prod_codbarra = '"+txtpesquisa2.getText()+"';";
  

                      Statement stm = (Statement) con.createStatement();
                try
                {
                   
                    ResultSet rs = stm.executeQuery(sql);

                    int i=0; 

                    while (rs.next()) {  
                                               
                        prodcodbarra = rs.getString("prod_codbarra");
                        prodnome = rs.getString("prod_nome");
                        prodtipo = rs.getString("prod_tipo");
                        prodmarca = rs.getString("prod_marca");
                        vl = rs.getString("prod_vlvenda");             
                      prodvlvenda = Float.valueOf(vl);
                      prodtamanho = txttamanho.getText();
                     prodqtd = txtqtd.getValue();
                             
                        i++;  
                                        }
                       if(i==0){ // Verificando se ha dados cadastrados atraves da variavel i

                        JOptionPane.showMessageDialog(null,"Código inválido!\n Digite um código válido!","Resultado",-1);

                    }else{
                     
     
  
                           tabela.setValueAt(prodcodbarra, cont, 0);
                       tabela.setValueAt(prodnome, cont,1);
                            tabela.setValueAt(prodtipo, cont,2);
                                 tabela.setValueAt(prodmarca, cont,3);
                                    tabela.setValueAt(prodtamanho, cont,4);
                                     tabela.setValueAt(prodqtd, cont,5);
                                      tabela.setValueAt(prodvlvenda, cont,6);
                                      
                                      
                                     subtotal = subtotal +(prodqtd * prodvlvenda);
                                     txtsubtotal.setText("R$ " + String.valueOf(subtotal));
                                     total = (subtotal - Float.valueOf(txtdesconto.getText()));
                                     txttotal.setText("R$ "+String.valueOf(total));
                       cont++;
                       
                       txtpesquisa2.setText("");
                       txttamanho.setText("");
                       txtqtd.setValue(1);
                       }

                 

                } catch (Exception ex) { // Consulta mal sucedida
                    JOptionPane.showMessageDialog(null,"Erro ao consultar!"+ex,"ERRO",0);
                }

            } catch (SQLException ex) {
                // Conexão com servidor mal sucedida
                JOptionPane.showMessageDialog(null,"Erro ao conectar com o servidor","ERRO!",0);
            }

        }catch(NumberFormatException erro){
            // Código fora do formato
            JOptionPane.showMessageDialog(null,"Digite o código corretamante","ERRO",0);
            txtpesquisa2.setText("");
        }
    }
    }//GEN-LAST:event_bttincluirprodutovendaActionPerformed

    private void txtcliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtcliActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtcliActionPerformed

    private void txtcliKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcliKeyReleased
    int codigocliente;
            if (txtcli.getText().equals("") || txtcli.getText() ==null){
           
        
              codigocliente = (int) tabela.getValueAt(tabela.getSelectedRow(), 0);     
                      
            }else{
                   if(tabela.getRowCount() == 1){
                    codigocliente = (int) tabela.getValueAt(0,0);
                    
                }else{
                         codigocliente = Integer.valueOf(txtcli.getText());
            }                 
               }
      
        try{    
            //Declarando a variavel código
           
   
                           
            Conectar.carregarDriver(); // Carregando o driver
            try {// Tratamento de erro para a conexao
                // Declarando  a variavel de conexão con
                // e estabelendo a conexão
                Connection con = null;

                try {
                    con = (Connection) DriverManager.getConnection(url2, username, password);
                } catch (SQLException ex) {
                    Logger.getLogger(GUIPesquisarClientes.class.getName()).log(Level.SEVERE, null, ex);
                }

                // Declarando uma string com o comando mySQL para consulta
             String sql = "SELECT cli_cod,cli_cpf,cli_rg,cli_nome,cli_end,cli_bairro,cli_compl,cli_cep,cli_tel,cli_email,cli_dtnasc,cli_pontpromo FROM cliente where cli_cod = "+ codigocliente+";";
  

                      Statement stm = (Statement) con.createStatement();
                try
                {
                   
                    ResultSet rs = stm.executeQuery(sql);

                    int i=0; 

                    while (rs.next()) {  
                        
              
                     vendanomecli = rs.getString("cli_nome");
                     vendaendcli = rs.getString("cli_cpf");
                      txtcpf.setText(rs.getString("cli_cpf"));       
                        i++;  
                                        }
                       if(i==0){ // Verificando se ha dados cadastrados atraves da variavel i

                  txtcpf.setText("");
                  
                    }

                 

                } catch (Exception ex) { 
                }

            } catch (SQLException ex) {
           
            }

        }catch(NumberFormatException erro){

          
        }
    }//GEN-LAST:event_txtcliKeyReleased

    private void bttincluirprodutovenda1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttincluirprodutovenda1ActionPerformed
float preco = (float) tabela.getValueAt(tabela.getSelectedRow(), 6);
int qtd = (int) tabela.getValueAt(tabela.getSelectedRow(), 5);
preco = preco * qtd;
total = total - preco;
subtotal = subtotal - preco;
txtsubtotal.setText("R$ "+String.valueOf(subtotal));
txttotal.setText("R$ "+String.valueOf(total));

        ((DefaultTableModel) tabela.getModel()).removeRow(tabela.getSelectedRow());   
cont--;
    }//GEN-LAST:event_bttincluirprodutovenda1ActionPerformed

    private void jPanel1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPanel1KeyReleased
       
    }//GEN-LAST:event_jPanel1KeyReleased

    private void txtpesquisa2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtpesquisa2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtpesquisa2ActionPerformed

    private void bttvoltarmenupesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttvoltarmenupesquisarActionPerformed
  this.dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_bttvoltarmenupesquisarActionPerformed

    private void comboformActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboformActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboformActionPerformed

    private void txtvlrecebidoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtvlrecebidoKeyReleased
double troco = 0.0;
String x = txtvlrecebido.getText();
x = x.replace(".","");
x = x.replace(",",".");
double vlrece = Double.valueOf(x);

troco = vlrece - total;
txttroco.setText("R$ " + String.valueOf(troco));

    }//GEN-LAST:event_txtvlrecebidoKeyReleased

    private void txtdescontoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtdescontoKeyPressed

        
String x = txtdesconto.getText();
x = x.replace(".","");
x = x.replace(",",".");
desconto = Double.valueOf(x);

 double descont = total - desconto;
 txttotal.setText("R$ " + String.valueOf(descont));
desconto = (desconto*100)/total;
        
    }//GEN-LAST:event_txtdescontoKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUIVender.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUIVender.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUIVender.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUIVender.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUIVender().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bttfinalizarvenda;
    private javax.swing.JButton bttincluirprodutovenda;
    private javax.swing.JButton bttincluirprodutovenda1;
    private javax.swing.JButton bttpesquisarcodvenda;
    private javax.swing.JButton bttpesquisarcodvenda1;
    private javax.swing.JButton bttvoltarmenupesquisar;
    private javax.swing.JCheckBox checkboxnotafiscalvenda;
    private javax.swing.JComboBox comboform;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblcodclivenda;
    private javax.swing.JLabel lblcodfuncvenda;
    private javax.swing.JLabel lblcodvenda;
    private javax.swing.JLabel lblcpf;
    private javax.swing.JLabel lbldescvenda;
    private javax.swing.JLabel lbldtemissaovenda;
    private javax.swing.JLabel lblquantvenda;
    private javax.swing.JLabel lbltamvenda;
    private javax.swing.JLabel lbltotalvenda;
    private javax.swing.JLabel lblvalorrecvenda1;
    private javax.swing.JLabel lblvalorrecvenda2;
    private javax.swing.JLabel lblvalorrecvenda3;
    private javax.swing.JLabel lblvalorvenda;
    private javax.swing.JTable tabela;
    public static final javax.swing.JTextField txtcli = new javax.swing.JTextField();
    public static javax.swing.JFormattedTextField txtcpf;
    private com.toedter.calendar.JDateChooser txtdata;
    private javax.swing.JFormattedTextField txtdesconto;
    private javax.swing.JFormattedTextField txtfunccod;
    private javax.swing.JTextField txtobs;
    public static final javax.swing.JTextField txtpesquisa2 = new javax.swing.JTextField();
    private com.toedter.components.JSpinField txtqtd;
    private javax.swing.JLabel txtsubtotal;
    private javax.swing.JTextField txttamanho;
    private javax.swing.JLabel txttotal;
    private javax.swing.JLabel txttroco;
    private javax.swing.JFormattedTextField txtvlrecebido;
    // End of variables declaration//GEN-END:variables
}
